var subSightings = [[-119.764,34.5646],[-119.759,34.5261],[-120.058,34.7576],[-120.054,34.7434],[-119.76,34.5212],[-119.66,34.4696],[-119.651,34.4629],[-120.215,34.5041],[-119.729,34.4568],[-119.651,34.4615],[-120.062,34.5335],[-119.687,34.4679],[-119.749,34.4883],[-119.758,34.5293],[-119.817,34.5324],[-120.057,34.7459],[-119.617,34.448],[-119.765,34.5647],[-119.733,34.4528],[-119.763,34.5381],[-119.834,34.5235],[-119.61,34.455],[-119.99,34.8038],[-120.233,34.4978],[-119.731,34.4617],[-119.761,34.5381],[-119.687,34.467],[-119.725,34.476],[-119.685,34.4751],[-119.712,34.4727],[-119.955,34.5404],[-119.72,34.4745],[-119.798,34.5401],[-120.054,34.5336],[-119.618,34.4473],[-119.735,34.4666],[-119.721,34.4745],[-119.668,34.4677],[-120.241,34.4948],[-120.055,34.534],[-119.638,34.4563],[-119.606,34.4538],[-120.056,34.7565],[-119.611,34.452],[-119.684,34.4755],[-119.957,34.5415],[-119.76,34.5232],[-119.757,34.5312],[-119.606,34.4539],[-119.72,34.4744],[-119.757,34.5318],[-119.756,34.5297],[-119.653,34.4623],[-120.064,34.737],[-120.063,34.7397],[-119.755,34.5294],[-120.063,34.7379],[-119.956,34.5426],[-119.61,34.4551],[-119.758,34.5368],[-119.767,34.5648],[-119.001,34.0935],[-119.758,34.5292],[-119.92,34.5241],[-119.732,34.4678],[-119.758,34.5291],[-120.063,34.7374],[-120.24,34.4883],[-119.735,34.4487],[-119.763,34.5647],[-119.681,34.4747],[-119.782,34.559],[-119.712,34.4728],[-120.226,34.4975],[-119.73,34.4607],[-119.76,34.5665],[-119.96,34.5338],[-119.762,34.5382],[-119.956,34.5415],[-119.786,34.548],[-119.689,34.4726],[-119.76,34.5244],[-120.133,34.5203],[-119.749,34.4874],[-120.163,34.5153],[-119.687,34.4682],[-119.734,34.4534],[-119.641,34.4627],[-119.611,34.4521],[-119.609,34.4545],[-120.223,34.4994],[-120.233,34.4976],[-119.69,34.4632],[-119.758,34.529],[-119.687,34.4675],[-119.513,34.4179],[-120.073,34.5164],[-119.61,34.4553],[-119.765,34.5646],[-120.237,34.4887],[-119.76,34.5247],[-119.732,34.4532],[-120.056,34.7554],[-119.713,34.4719],[-119.639,34.4589],[-119.623,34.4584],[-119.787,34.547],[-119.732,34.4534],[-119.769,34.5336],[-119.76,34.5218],[-120.061,34.7419],[-119.752,34.5282],[-119.649,34.4628],[-119.76,34.5243],[-119.623,34.4677],[-119.759,34.5263],[-119.957,34.5363],[-119.752,34.5281],[-119.651,34.4631],[-119.757,34.5329],[-119.76,34.5225],[-119.726,34.475],[-119.685,34.4754],[-119.652,34.4626],[-120.062,34.7411],[-119.76,34.5248],[-119.735,34.4668],[-119.764,34.5647],[-119.757,34.5303],[-119.641,34.4628],[-119.755,34.5296],[-119.65,34.4579],[-119.804,34.444],[-119.762,34.5374],[-119.758,34.5294],[-119.787,34.546],[-119.956,34.5458],[-119.786,34.5551],[-119.681,34.4748],[-119.69,34.4595],[-119.787,34.5462],[-119.761,34.5393],[-119.8,34.5142],[-119.76,34.5371],[-119.725,34.4759],[-119.731,34.4614],[-119.759,34.5276],[-119.61,34.4552],[-119.725,34.4758],[-119.724,34.4759],[-119.76,34.5382],[-119.623,34.4585],[-120.224,34.504],[-120.225,34.5047],[-119.623,34.4586],[-119.78,34.5579],[-119.759,34.5262],[-119.727,34.428],[-119.713,34.4722],[-119.732,34.4533],[-119.76,34.5209],[-119.762,34.5381],[-119.992,34.8204],[-119.786,34.5552],[-119.757,34.531],[-119.644,34.4621],[-119.649,34.4635],[-119.609,34.4551],[-119.801,34.5136],[-119.759,34.5224],[-120.22,34.5036],[-119.652,34.4629],[-119.65,34.4618],[-120.238,34.4877],[-120.237,34.4899],[-119.803,34.5147],[-119.765,34.5648],[-119.759,34.5267],[-119.65,34.4617],[-119.818,34.5431],[-119.74,34.4045],[-120.228,34.5002],[-119.732,34.4679],[-119.65,34.4633],[-119.761,34.5662],[-119.758,34.5289],[-119.651,34.4633],[-119.753,34.5278],[-119.649,34.4634],[-119.639,34.4617],[-119.688,34.4646],[-120.095,34.7237],[-119.662,34.4654],[-119.759,34.5265],[-120.063,34.7373],[-120.051,34.7475],[-119.797,34.5403],[-119.735,34.4488],[-119.919,34.5237],[-119.76,34.5234],[-119.749,34.4882],[-119.76,34.5224],[-119.76,34.5222],[-120.223,34.4993],[-119.762,34.5383],[-119.624,34.4697],[-120.239,34.4943],[-119.72,34.4746],[-119.95,34.7741],[-120.121,34.52],[-119.762,34.5375],[-119.955,34.5446],[-119.724,34.476],[-119.529,34.4003],[-119.69,34.4636],[-119.724,34.4758],[-120.226,34.498],[-119.511,34.4211],[-119.759,34.5264],[-119.65,34.458],[-119.725,34.4763],[-119.65,34.4616],[-119.705,34.4702],[-120.066,34.5286],[-119.723,34.4756],[-119.993,34.8206],[-120.062,34.7404],[-119.76,34.5239]];
$(document).ready(function() {
	var vectorSource = new ol.source.Vector({
      //create empty vector
    });

	//create a bunch of icons and add to source vector
	subSightings.forEach(function(item,index) {
		var iconFeature = new ol.Feature({
		          geometry: new  
		            ol.geom.Point(ol.proj.fromLonLat(item)),
		        name: 'Flower'
		});
		vectorSource.addFeature(iconFeature);
	});

    //create the style
    var iconStyle = new ol.style.Style({
      image: new ol.style.Icon( ({
        anchor: [0.5, 46],
        anchorXUnits: 'fraction',
        anchorYUnits: 'pixels',
        opacity: 0.75,
        src: '../flower.png'
      }))
    });

    //add the feature vector to the layer vector, and apply a style to whole layer
    var vectorLayer = new ol.layer.Vector({
      source: vectorSource,
      style: iconStyle
    });

	var attribution = new ol.control.Attribution({
	     collapsible: false
	 });

	 var map = new ol.Map({
	     controls: ol.control.defaults({attribution: false}).extend([attribution]),
	     layers: [
	         new ol.layer.Tile({
	             source: new ol.source.OSM()
	         }),
	         vectorLayer
	     ],
	     target: 'map',
	     view: new ol.View({
	         center: ol.proj.fromLonLat([-119.644, 34.5158]),
	         zoom: 15,
	         maxZoom: 20
	     })
	 });

	$('.sightings-wrapper tbody tr .locate').click(function() {
		$('.sightings-wrapper tr').each(function() {
			$(this).removeClass('active');
		});
		$(this).parent('tr').addClass('active');
		lat = parseFloat($(this).siblings('.lat').text());
		lon = parseFloat($(this).siblings('.lon').text());
        map.getView().animate({
          center: ol.proj.fromLonLat([lon,lat]),
          duration: 2000,
          zoom: 18
        });
        var elmnt = document.getElementById('map-wrapper');
		elmnt.scrollIntoView();
    });

	var extent = vectorLayer.getSource().getExtent();
	map.getView().fit(extent, map.getSize());

	$('.map-wrapper button').click(function() {
		map.getView().fit(extent, map.getSize());
	});
});