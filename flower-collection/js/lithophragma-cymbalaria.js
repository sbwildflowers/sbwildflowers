var subSightings = [[-119.757,34.5095],[-119.757,34.5098],[-119.495,34.4795],[-119.757,34.51],[-119.635,34.5023],[-119.762,34.5662],[-119.642,34.514],[-119.636,34.5111],[-119.758,34.5136],[-119.956,34.5299],[-119.554,34.486],[-119.75,34.5843],[-119.634,34.504],[-120.001,34.744],[-119.757,34.5138],[-119.754,34.5272],[-119.668,34.5227],[-119.668,34.5228],[-119.634,34.5044],[-119.649,34.4636],[-119.976,34.7464],[-119.582,34.4811],[-119.673,34.5205],[-119.588,34.4804],[-119.975,34.7485],[-119.758,34.5137],[-119.643,34.5141],[-119.635,34.5035],[-119.637,34.4947],[-119.586,34.4799],[-119.765,34.5647],[-119.816,34.511],[-119.757,34.5163],[-119.585,34.4804],[-119.758,34.5135],[-119.752,34.5281],[-119.584,34.4804],[-119.636,34.4912],[-119.636,34.4951],[-119.511,34.4902],[-119.999,34.7433],[-119.752,34.5104],[-119.673,34.5203],[-119.635,34.5027],[-119.636,34.5024],[-119.662,34.4654],[-119.65,34.4615],[-119.637,34.4949],[-119.583,34.4803],[-119.513,34.4872],[-119.495,34.4811],[-120.002,34.7465],[-119.769,34.5634],[-119.633,34.5073],[-119.644,34.5146],[-119.687,34.501],[-119.666,34.5225],[-119.636,34.4949],[-119.756,34.5103],[-119.583,34.4807],[-119.599,34.4943],[-119.585,34.4794],[-119.585,34.4793],[-119.764,34.5648],[-119.753,34.5097],[-119.757,34.5094],[-119.756,34.5135],[-119.971,34.7453],[-119.765,34.5648],[-119.763,34.5648],[-119.884,34.7766],[-119.971,34.7501],[-119.496,34.4769],[-119.75,34.5842],[-119.747,34.5841],[-119.96,34.5357],[-119.513,34.4874],[-119.973,34.7467],[-119.636,34.4954],[-119.757,34.5105],[-119.673,34.5008],[-120.058,34.741],[-119.758,34.5183],[-119.685,34.4754],[-119.768,34.5638],[-119.771,34.6294],[-119.672,34.5023],[-119.582,34.481],[-119.636,34.4911],[-119.972,34.75],[-119.758,34.5184],[-119.516,34.4879],[-119.745,34.5235],[-119.919,34.5237],[-119.758,34.514],[-119.749,34.5845],[-119.646,34.5162],[-119.959,34.5337],[-119.764,34.5645],[-119.757,34.5103],[-119.582,34.4812],[-119.757,34.5102],[-119.666,34.5228],[-119.764,34.5646],[-119.756,34.5102],[-119.768,34.5636],[-119.585,34.48],[-119.499,34.4756],[-119.75,34.5844],[-119.7,34.4782],[-119.747,34.5842],[-119.586,34.4796],[-119.757,34.5137],[-119.512,34.4899],[-119.643,34.5145],[-119.646,34.5161],[-119.785,34.5578],[-119.635,34.5025],[-119.66,34.5235],[-119.967,34.7528],[-119.973,34.7503],[-119.767,34.6299],[-119.556,34.4858],[-119.644,34.5145],[-119.752,34.5282],[-120.099,34.7219],[-119.745,34.5853],[-119.769,34.5633],[-119.5,34.4737],[-119.636,34.4953],[-119.757,34.5097],[-119.558,34.4862],[-119.902,34.5203],[-119.765,34.5649],[-119.666,34.5227],[-120.002,34.7477],[-119.903,34.5204],[-119.763,34.5651],[-119.76,34.5663],[-119.697,34.4784],[-119.761,34.5661],[-119.763,34.5652],[-119.633,34.507],[-119.586,34.4794],[-119.762,34.5661],[-119.77,34.5606],[-119.643,34.5144],[-119.757,34.5101],[-119.635,34.5028],[-119.973,34.7504],[-119.757,34.5176],[-119.609,34.4549],[-120.002,34.7431],[-119.99,34.8225],[-119.75,34.5006],[-119.636,34.5025],[-119.637,34.4952],[-119.757,34.5139],[-119.754,34.5274],[-119.588,34.4801],[-119.496,34.4816],[-119.699,34.4782],[-119.636,34.4948],[-119.684,34.4755],[-119.672,34.5201],[-119.682,34.4975],[-119.758,34.5138],[-120.002,34.7448],[-119.964,34.7609],[-119.688,34.4639],[-119.637,34.4948],[-119.756,34.5127],[-119.693,34.4988],[-119.655,34.524],[-119.682,34.4754],[-119.635,34.5034],[-119.607,34.4934],[-119.759,34.5671],[-119.583,34.4805],[-119.772,34.6294],[-119.636,34.495],[-119.752,34.5103],[-119.66,34.5236],[-119.745,34.5234],[-119.757,34.5093],[-119.689,34.4639],[-119.766,34.5647],[-119.684,34.5],[-119.698,34.4783],[-119.634,34.51],[-119.672,34.5025],[-119.585,34.4801],[-119.765,34.5645],[-119.662,34.5233],[-119.752,34.6013],[-119.631,34.509],[-119.749,34.5846],[-119.634,34.5041],[-119.602,34.4939],[-119.755,34.513],[-119.663,34.4654],[-119.633,34.5049],[-119.976,34.7463],[-119.769,34.6291],[-120.056,34.7428],[-119.96,34.5335],[-119.582,34.4809],[-119.757,34.5099],[-119.636,34.4947],[-119.636,34.4952],[-119.957,34.5364],[-119.958,34.5376],[-119.757,34.5091],[-119.887,34.7775],[-119.495,34.48],[-119.764,34.5647],[-119.965,34.7601],[-119.594,34.4916],[-119.757,34.5096],[-119.768,34.564],[-119.757,34.5162],[-119.637,34.495],[-119.694,34.4987],[-119.512,34.4898],[-119.753,34.5095],[-119.755,34.51],[-119.637,34.4946]];
$(document).ready(function() {
	var vectorSource = new ol.source.Vector({
      //create empty vector
    });

	//create a bunch of icons and add to source vector
	subSightings.forEach(function(item,index) {
		var iconFeature = new ol.Feature({
		          geometry: new  
		            ol.geom.Point(ol.proj.fromLonLat(item)),
		        name: 'Flower'
		});
		vectorSource.addFeature(iconFeature);
	});

    //create the style
    var iconStyle = new ol.style.Style({
      image: new ol.style.Icon( ({
        anchor: [0.5, 46],
        anchorXUnits: 'fraction',
        anchorYUnits: 'pixels',
        opacity: 0.75,
        src: '../flower.png'
      }))
    });

    //add the feature vector to the layer vector, and apply a style to whole layer
    var vectorLayer = new ol.layer.Vector({
      source: vectorSource,
      style: iconStyle
    });

	var attribution = new ol.control.Attribution({
	     collapsible: false
	 });

	 var map = new ol.Map({
	     controls: ol.control.defaults({attribution: false}).extend([attribution]),
	     layers: [
	         new ol.layer.Tile({
	             source: new ol.source.OSM()
	         }),
	         vectorLayer
	     ],
	     target: 'map',
	     view: new ol.View({
	         center: ol.proj.fromLonLat([-119.644, 34.5158]),
	         zoom: 15,
	         maxZoom: 20
	     })
	 });

	$('.sightings-wrapper tbody tr .locate').click(function() {
		$('.sightings-wrapper tr').each(function() {
			$(this).removeClass('active');
		});
		$(this).parent('tr').addClass('active');
		lat = parseFloat($(this).siblings('.lat').text());
		lon = parseFloat($(this).siblings('.lon').text());
        map.getView().animate({
          center: ol.proj.fromLonLat([lon,lat]),
          duration: 2000,
          zoom: 18
        });
        var elmnt = document.getElementById('map-wrapper');
		elmnt.scrollIntoView();
    });

	var extent = vectorLayer.getSource().getExtent();
	map.getView().fit(extent, map.getSize());

	$('.map-wrapper button').click(function() {
		map.getView().fit(extent, map.getSize());
	});
});